import * as Electron from 'electron';

// Taken from `RemoteMainInterface`
export type ElectronRemote = {
    app: Electron.App;
    autoUpdater: Electron.AutoUpdater;
    BrowserView: typeof Electron.BrowserView;
    BrowserWindow: typeof Electron.BrowserWindow;
    ClientRequest: Electron.ClientRequest;
    clipboard: Electron.Clipboard;
    CommandLine: Electron.CommandLine;
    contentTracing: Electron.ContentTracing;
    Cookies: Electron.Cookies;
    crashReporter: Electron.CrashReporter;
    Debugger: Electron.Debugger;
    desktopCapturer: Electron.DesktopCapturer;
    dialog: Electron.Dialog;
    Dock: Electron.Dock;
    DownloadItem: Electron.DownloadItem;
    globalShortcut: Electron.GlobalShortcut;
    inAppPurchase: Electron.InAppPurchase;
    IncomingMessage: Electron.IncomingMessage;
    ipcMain: Electron.IpcMain;
    Menu: typeof Electron.Menu;
    MenuItem: typeof Electron.MenuItem;
    MessageChannelMain: typeof Electron.MessageChannelMain;
    MessagePortMain: Electron.MessagePortMain;
    nativeImage: Electron.NativeImage;
    nativeTheme: Electron.NativeTheme;
    net: Electron.Net;
    netLog: Electron.NetLog;
    Notification: typeof Electron.Notification;
    powerMonitor: Electron.PowerMonitor;
    powerSaveBlocker: Electron.PowerSaveBlocker;
    protocol: Electron.Protocol;
    screen: Electron.Screen;
    ServiceWorkers: Electron.ServiceWorkers;
    session: Electron.Session;
    shell: Electron.Shell;
    systemPreferences: Electron.SystemPreferences;
    TouchBar: typeof Electron.TouchBar;
    TouchBarButton: Electron.TouchBarButton;
    TouchBarColorPicker: Electron.TouchBarColorPicker;
    TouchBarGroup: Electron.TouchBarGroup;
    TouchBarLabel: Electron.TouchBarLabel;
    TouchBarOtherItemsProxy: Electron.TouchBarOtherItemsProxy;
    TouchBarPopover: Electron.TouchBarPopover;
    TouchBarScrubber: Electron.TouchBarScrubber;
    TouchBarSegmentedControl: Electron.TouchBarSegmentedControl;
    TouchBarSlider: Electron.TouchBarSlider;
    TouchBarSpacer: Electron.TouchBarSpacer;
    Tray: typeof Electron.Tray;
    webContents: Electron.WebContents;
    WebRequest: Electron.WebRequest;

    getCurrentWebContents(): Electron.WebContents;
    getCurrentWindow(): Electron.BrowserWindow;
    getGlobal(name: string): any;
};
